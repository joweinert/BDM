services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"  # Internal (Docker) access
      - "29092:29092"  # External (Host) access
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 1s
      retries: 10
      start_period: 5s

  producer:
    build: ./streaming
    container_name: kafka_producer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - DOCKER_ENV=true
    command: ["python", "src/producer/kafka_producer.py"]

  consumer:
    build: ./streaming
    container_name: kafka_consumer
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      - DOCKER_ENV=true
    command: ["python", "src/consumer/kafka_consumer.py"]